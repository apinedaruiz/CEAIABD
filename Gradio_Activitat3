import gradio as gr
from transformers import pipeline


def traductor(frase1, frase2):
    pipe_ingles = pipeline("translation", model="Helsinki-NLP/opus-mt-en-es")
    pipe_espanol = pipeline("translation", model="Helsinki-NLP/opus-mt-es-en")
    frase_traduida = pipe_ingles(frase1) if frase1 else pipe_espanol(frase2)
    return frase_traduida[0]['translation_text']  

def login(username, password):
    if username == "iabd" and password == "iabd":
        return "Bienvenido {username}!", gr.update(visible=True), gr.update(visible=False)
    else:
        return "Credenciales incorrectas. Vuelvelo a intentar.", gr.update(visible=False), gr.update(visible=True)
    
with gr.Blocks() as demo:
    gr.Markdown("Inicia sesión para traducir.")
    
    with gr.Row() as login_block:
        username = gr.Textbox(label="Usuario")
        password = gr.Textbox(label="Contraseña", type="password")
        login_btn = gr.Button("Inicia sesión")
        login_message = gr.Markdown("")

    with gr.Row(visible=False) as traductor_block:
        gr.Markdown("Escribe y pulsa *Traduce* para traducir la frase")
        with gr.Row():
            txtIn1 = gr.Textbox(placeholder="Traduce del inglés al español.", label="Inglés-Español")
            txtIn2 = gr.Textbox(placeholder="Traduce del español al inglés.", label="Español-Inglés")
            txtOut = gr.Textbox(label="Traducción")
        btn = gr.Button("Traduce")
        btn.click(fn=traductor, inputs=[txtIn1, txtIn2], outputs=[txtOut])


    login_btn.click(fn=login,inputs=[username, password], outputs=[login_message, traductor_block, login_block])

demo.launch()
